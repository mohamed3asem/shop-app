{"version":3,"sources":["components/stripe-button/stripe-button.component.jsx","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["StripeCheckoutButton","_ref","price","priceForStripe","react_default","a","createElement","main_default","label","name","billingAddress","shippingAddress","image","description","concat","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","CheckoutItemContainer","styled","div","_templateObject","ImageContainer","_templateObject2","TextContainer","span","_templateObject3","QuantityContainer","_templateObject4","displayName","RemoveButtonContainer","_templateObject5","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","imageUrl","quantity","src","alt","onClick","CheckoutPageContainer","checkout_styles_templateObject","CheckoutHeaderContainer","checkout_styles_templateObject2","HeaderBlockContainer","checkout_styles_templateObject3","TotalContainer","checkout_styles_templateObject4","WarningContainer","checkout_styles_templateObject5","__webpack_require__","d","__webpack_exports__","checkout_component_CheckoutPage","CheckoutPage","cartItems","total","map","checkout_item_component","key","id","stripe_button_component","mapStateToProps","createStructuredSelector","selectCartItems","selectCartTotal"],"mappings":"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","file":"static/js/6.eb6211c0.chunk.js","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_b7a3hFL5nC3qlBCZ6bQACpez00gyMMP52H';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    })\n      .then(response => {\n        alert('succesful payment');\n      })\n      .catch(error => {\n        console.log('Payment Error: ', error);\n        alert(\n          'There was an issue with your payment! Please make sure you use the provided credit card.'\n        );\n      });\n  };\n\n  return (\n    <StripeCheckout\n      label='Pay Now'\n      name='CRWN Clothing Ltd.'\n      billingAddress\n      shippingAddress\n      image='https://svgshare.com/i/CUz.svg'\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n","import styled from 'styled-components';\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n\n  @media screen and (max-width: 800px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const TextContainer = styled.span`\n  width: 23%;\n\n  @media screen and (max-width: 800px) {\n    width: 22%;\n  }\n`;\n\nexport const QuantityContainer = styled(TextContainer)`\n  display: flex;\n\n  span {\n    margin: 0 10px;\n  }\n\n  div {\n    cursor: pointer;\n  }\n`;\n\nQuantityContainer.displayName = 'QuantityContainer';\n\nexport const RemoveButtonContainer = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;\n\nRemoveButtonContainer.displayName = 'RemoveButtonContainer';\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  clearItemFromCart,\n  addItem,\n  removeItem\n} from '../../redux/cart/cart.actions';\n\nimport {\n  CheckoutItemContainer,\n  ImageContainer,\n  TextContainer,\n  QuantityContainer,\n  RemoveButtonContainer\n} from './checkout-item.styles';\n\nexport const CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  return (\n    <CheckoutItemContainer>\n      <ImageContainer>\n        <img src={imageUrl} alt='item' />\n      </ImageContainer>\n      <TextContainer>{name}</TextContainer>\n      <QuantityContainer>\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\n        <span>{quantity}</span>\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\n      </QuantityContainer>\n      <TextContainer>{price}</TextContainer>\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\n        &#10005;\n      </RemoveButtonContainer>\n    </CheckoutItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item)),\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CheckoutItem);\n","import styled from 'styled-components';\n\nexport const CheckoutPageContainer = styled.div`\n  width: 55%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n\n  button {\n    margin-left: auto;\n    margin-top: 50px;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 90%;\n  }\n`;\n\nexport const CheckoutHeaderContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlockContainer = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n\n  &:last-child {\n    width: 8%;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 22%\n\n    &:last-child {\n      width: 12%;\n    }\n  }\n`;\n\nexport const TotalContainer = styled.div`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n`;\n\nexport const WarningContainer = styled.div`\n  text-align: center;\n  margin-top: 40px;\n  font-size: 24px;\n  color: red;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\n\nimport {\n  selectCartItems,\n  selectCartTotal\n} from '../../redux/cart/cart.selectors';\n\nimport {\n  CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n  WarningContainer\n} from './checkout.styles';\n\nexport const CheckoutPage = ({ cartItems, total }) => (\n  <CheckoutPageContainer>\n    <CheckoutHeaderContainer>\n      <HeaderBlockContainer>\n        <span>Product</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Description</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Quantity</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Price</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Remove</span>\n      </HeaderBlockContainer>\n    </CheckoutHeaderContainer>\n    {cartItems.map(cartItem => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <TotalContainer>TOTAL: ${total}</TotalContainer>\n    <WarningContainer>\n      *Please use the following test credit card for payments*\n      <br />\n      4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\n    </WarningContainer>\n    <StripeCheckoutButton price={total} />\n  </CheckoutPageContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"],"sourceRoot":""}